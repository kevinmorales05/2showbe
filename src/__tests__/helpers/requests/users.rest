# @url=http://localhost:4000/
@url=https://twoshowbe.onrender.com/

###
POST {{url}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query GetUsers {
  getUsers {
    name
    lastName
    firebaseID
    email
    status
    birthday
    role
    telephone
    fullAddress
    country
    city
    gender
    profileImg
  }
}


###
POST {{url}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation CreateUser($input: UserInput) {
  createUser(input: $input)
}

{
  "input": {
    "name": "dev",
    "lastName": "dev",
    "firebaseID": "randomnumber",
    "email": "dev@gmail.com",
    "status": true,
    "birthday": "08-12-1986",
    "role": "client",
    "telephone": "0961937000",
    "fullAddress": "Magdalena, calle main y calle secudanria",
    "country": "Ecuador",
    "city": "Quito",
    "gender": "male",
    "profileImg": "dev.png"
  }
}

###
###
POST {{url}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation CreateTicketToUser($input: inputOfCreateTicketToUser) {
  createTicketToUser(input: $input) {
    assignTicketDetails {
      buyDate
      modality
      seatSection
      seatName
      ticketCode
      status
      isReserved
      _id
    }
    eventDetails {
      eventName
      artistName
      shortDescription
      mainDescription
      dateEvent
      banners {
        promoVideo
        bannersUrls
        _id
      }
      videoImg
      saleStatus
      hourEvent
      urlEvent
      ticketsAvailable
      modality
      isOnline
      concertPlacesIMG
      visitorTeam
      homeTeam
      sportType
      _id
    }
    userDetails {
      name
      lastName
      firebaseID
      status
      _id
    }
  }
}

{
  "input": {
    "userFirebaseID": "randomnumber",
    "eventID": "644c0d9e7ded43bae6f52d30",
    "ticketDetails": {
      "modality": ["presential"],
      "seatSection": "GENERAL",
      "seatName": "10A",
      "status": "active",
      "isReserved": true,
    }
  }
}


###
###
POST {{url}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query GetUserTickets($input: inputOfUserTickets, $offset: Int, $limit: Int) {
  getUserTickets(input: $input, offset: $offset, limit: $limit) {
    userDetails {
      name
      lastName
      firebaseID
      status
      _id
    }
    buyDetails {
      event {
        buyTicketsDetails {
          name
          description
          section
          cost
          currency
          ticketsAvailable
          _id
        }
        eventName
        artistName
        shortDescription
        mainDescription
        dateEvent
        banners {
          promoVideo
          bannersUrls
          _id
        }
        videoImg
        saleStatus
        hourEvent
        urlEvent
        ticketsAvailable
        modality
        isOnline
        concertPlacesIMG
        visitorTeam
        homeTeam
        sportType
        _id
      }
    }
  }
}

{
  "input": {
    "userID": "644c0d847ded43bae6f52d1d"
  },
  "offset": 0,
  "limit": 2
}