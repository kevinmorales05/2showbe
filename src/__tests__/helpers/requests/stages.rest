# check the port only for testing

#MUTATION
# @url=http://localhost:4000/
@url=https://twoshowbe.onrender.com/
###
POST {{url}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation CreateStage($input: inputOfCreateStage) {
  createStage(input: $input) {
    eventCategory {
      categoryType
      name
      shortDescription
      longDescription
      icon
      urlImg
    }
    address {
      city
      country
      state
      mainStreet
      numberStreet
      reference
      lat
      long
      secondStreet
      languages
      mapsURL
    }
    stageDetails {
      name
      description
      longDescription
      openFrom
      closeTo
      banners
      videoURL
      capacity
      daysOpen
      onlineLink
      id
    }
    id
  }
}

{
    "input": {
      "eventCategory": 
        {
          "categoryType": "soccer",
          "name": "Futbol Profesional",
          "shortDescription": "Deporte de balón",
          "longDescription": "Este deporte necesitA de 11 jugadores por equipo para jugar",
          "icon": "ballon-soccer.svg",
          "urlImg": "messi-web.png"
        }
      ,
      "address": {
        "city": "Quito",
        "country": "Ecuador",
        "state": "Pichincha",
        "mainStreet": "Naciones Unidas",
        "numberStreet": "Oe2-49",
        "reference": "Frente al Quicentro Norte",
        "lat": "23423423234234",
        "long": "23432832983238",
        "secondStreet": "Shyris",
        "mapsURL": "googlemap.238238.com",
        "languages": ["Español"]
      },
      "stageDetails": {
        "daysOpen": [6],
        "onlineLink": "partidoliga.com",
        "capacity": 3000,
        "videoURL": "videopartidoliga.com",
        "banners": ["banner1.com", "banner2.com", "banner3.com"],
        "closeTo": "22:00",
        "openFrom": "17:30",
        "longDescription": "Estadio de la Liga",
        "description": "Estadio Olimpico Atahualpa",
        "name": "Estadio"
      }
    }
}


###
POST {{url}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query GetEventCategories($input: inputOfGetStagesByAddress, $offset: Int, $limit: Int) {
  getStages(input: $input, offset: $offset, limit: $limit) {
    addressID {
      city
      country
      state
      mainStreet
      numberStreet
      reference
      lat
      long
      secondStreet
      languages
      mapsURL
    }
    eventCategoryID {
      categoryType
      name
      shortDescription
      longDescription
      icon
      urlImg
    }
    name
    description
    longDescription
    banners
    videoURL
    capacity
    openFrom
    closeTo
    daysOpen
    onlineLink
  }
}
